<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.teamproject.myteam01.mapper.EventMapper">

	<!--  록귀 파트  -->

	<!-- 이벤트테이블 좌표 UPDATE 테스트 -->
	<select id="selectEHOST" resultType="String">
		SELECT EHOST FROM EVENT ORDER BY ENO DESC 
	</select>
	
	<!-- 영범 -->
	<!-- 오늘 등록한 행사 개수 -->
	<select id="selectRegEventForCnt" resultType="Long">
		SELECT COUNT(*) AS count
		FROM EVENT
		WHERE TRUNC(EREGDATE) = TRUNC(SYSDATE)
	</select>
	
	<select id="selectRegDate" resultType="com.teamproject.myteam01.domain.EventVO">
		SELECT eregdate FROM event ORDER BY eregdate DESC FETCH FIRST 100 ROWS ONLY
	</select>
	
	<select id="selectRecentEvent" resultType="com.teamproject.myteam01.domain.EventVO">
		SELECT *
		FROM EVENT
		ORDER BY eregdate DESC
		FETCH FIRST 10 ROWS ONLY
	</select>
	
	<update id="updaterestreview">
	    UPDATE event_reviews 
	    SET eRTITLE = #{ertitle},
	        eRCONTENT = #{ercontent},
	        eRMODDATE = DEFAULT
	    WHERE erno = #{erno}
	</update>
	
	<select id="selectMoreReviews" resultType="com.teamproject.myteam01.domain.EventReviewVO">
		SELECT *
		FROM (
		    SELECT event_reviews.*, 
		           ROW_NUMBER() OVER (ORDER BY ERNO DESC) AS rn
		    FROM event_reviews
		    WHERE eno = #{eno}
		) subquery
		WHERE rn BETWEEN #{offset} + 1 AND #{offset} + #{pageSize}
	</select>
	
	<select id="selectReviewsForStar" resultType="Long"> 
		SELECT ERRATING FROM event_reviews WHERE ENO = #{eno} ORDER BY ERNO DESC 
	</select>
	
	<update id="updateEventCoord" parameterType="com.teamproject.myteam01.domain.EventVO">
		UPDATE EVENT
		SET excoord = #{excoord},
		    eycoord = #{eycoord}
		WHERE EHOST = #{ehost}
	</update>

	<!--  행사 디테일  -->
	<select id="eventDetail" resultType="com.teamproject.myteam01.domain.EventVO">
	<![CDATA[
		SELECT * FROM EVENT WHERE ENO = #{eno}
	]]>
	</select>
	
	<!--  행사리뷰조회  -->
	<select id="selectReviews" resultType="com.teamproject.myteam01.domain.EventReviewVO"> 

		WITH Reviews AS (
		    SELECT ERNO, ERTITLE, ERCONTENT, ERWRITER, ERREGDATE, ERMODDATE, ERRATING, UNO, ENO, 
		    ROW_NUMBER() OVER (ORDER BY ERREGDATE DESC) AS rn
		    FROM Event_Reviews
		)
		SELECT ERNO, ERTITLE, ERCONTENT, ERWRITER, ERREGDATE, ERMODDATE, ERRATING, UNO, ENO
		FROM Reviews
		WHERE ENO = #{eno}
		AND rn BETWEEN (#{pageNum} - 1) * 3 + 1 AND #{pageNum} * 3
	</select>
	
	
	<select id="selectReviews2" resultType="com.teamproject.myteam01.domain.EventReviewVO">
		SELECT ERNO, ERTITLE, ERCONTENT, ERWRITER, ERREGDATE, ERMODDATE, ERRATING, UNO, ENO
		FROM Event_Reviews
		WHERE ENO = #{eno}
	</select>
	
	
	<!--  행사리뷰등록  -->
	<insert id="registerReview" parameterType="com.teamproject.myteam01.domain.EventReviewVO"> 
		INSERT INTO EVENT_reviews 
		VALUES(SEQ_EVENT_REVIEWS.nextval, #{ertitle}, #{ercontent}, #{erwriter}, DEFAULT, DEFAULT, #{errating}, seq_uno.nextval, #{eno}) 
	</insert>

	<!--  행사리뷰삭제  -->
	<delete id="deleteReview"> DELETE EVENT_REVIEWS WHERE ERNO = #{erno} </delete>
	
	
	<select id="selectEventListByGuName" resultType="com.teamproject.myteam01.domain.EventVO"> 
		SELECT *
		FROM teampj.EVENT
		WHERE EGUNAME LIKE  #{guName} 
		ORDER BY ENO DESC
		OFFSET #{offset} ROWS
		FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	
	<select id="selectEventList2" resultType="com.teamproject.myteam01.domain.EventVO"> 
		SELECT ENO ,ENAME ,EPERIOD ,ESITE ,EHOST ,EADDRESS ,UNO ,EVIEWSCNT ,ERATING ,EXCOORD ,EYCOORD ,ETYPE ,EREGDATE ,EGUNAME ,ECOST
		FROM teampj.EVENT
		ORDER BY ENO DESC
		OFFSET #{offset} ROWS
		FETCH NEXT #{pageSize} ROWS ONLY
	</select>
	<!--  희준  -->
	<!--  목록조회  -->
	<select id="selectEventList" resultType="com.teamproject.myteam01.domain.EventVO"> 
		SELECT ENO, ENAME, EPERIOD, ECOST, EADDRESS, EPLACE, ESITE, EHOST, ECONTENT, 
		UNO, EVIEWSCNT, ERATING, EXCOORD, EYCOORD, ETYPE 
		FROM teampj.event ORDER BY ENO DESC 
	</select>
	
	<!--  행사 등록  -->
	<insert id="registerEvent" parameterType="com.teamproject.myteam01.domain.EventVO">
	    <selectKey keyProperty="eno" order="BEFORE" resultType="Long"> 
	        SELECT teampj.seq_event.nextval FROM dual 
	    </selectKey>
	    INSERT INTO teampj.event 
	    (eno, ename, eperiod, ecost, eaddress, eplace, esite, ehost, econtent, eviewsCnt, erating, excoord, eycoord, etype, eregdate)
	    VALUES (#{eno}, #{ename}, #{eperiod}, #{ecost}, #{eaddress}, #{eplace}, #{esite}, #{ehost}, 
	            #{econtent}, DEFAULT, DEFAULT, #{excoord}, #{eycoord}, #{etype}, DEFAULT)
	</insert>

	<!--  행사 조회  -->
	<select id="selectEvent" resultType="com.teamproject.myteam01.domain.EventVO"> 
		SELECT ENO, ENAME, EPERIOD, ECOST, EADDRESS, EPLACE, ESITE, EHOST, 
		ECONTENT, UNO, EVIEWSCNT, ERATING, EXCOORD, EYCOORD FROM teampj.event 
		WHERE eno = #{eno} 
	</select>
	<!--  행사 수정  -->
	<update id="updateEvent"> 
		UPDATE teampj.event SET ename = #{ename}, eperiod = #{eperiod}, ecost = #{ecost}, 
		eaddress = #{eaddress}, eplace = #{eplace}, esite = #{esite}, ehost = #{ehost}, econtent = #{econtent} 
		WHERE eno = #{eno} 
	</update>
	<!--  행사 삭제  -->
	<delete id="delEvent"> 
		DELETE teampj.event WHERE eno = #{eno} 
	</delete>
	<!--  행사 조회수 증가  -->
	<update id="updateEviewsCnt"> 
		UPDATE teampj.event SET eviewsCnt = eviewsCnt +1 WHERE eno = #{eno} 
	</update>
	
	
</mapper>